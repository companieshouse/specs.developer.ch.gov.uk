{
  "swaggerVersion": "1.2",
  "basePath": "http://example.com/api_url",
  "resourcePath": "/officers/{officer_id}/appointments",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "description": "List of all officer appointments",
      "operations": [
        {
          "displayMethod": "list",
          "method": "GET",
          "nickname": "appointmentList",
          "parameters": [
            {
              "allowMultiple": false,
              "description": "The officer id of the appointment list being requested.",
              "name": "officer_id",
              "paramType": "path",
              "required": true,
              "type": "string"
            },
            {
              "allowMultiple": false,
              "description": "The number of appointments to return per page.",
              "name": "items_per_page",
              "paramType": "query",
              "type": "integer"
            },
            {
              "allowMultiple": false,
              "description": "The first row of data to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the items_per_page parameter.",
              "name": "start_index",
              "paramType": "query",
              "type": "integer"
            }
          ],
          "responseHeaders": [
            {
              "description": "The ETag of the resource.",
              "name": "ETag",
              "required": true,
              "value": "ETag"
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Not authorised",
              "responseModel": "error"
            },
            {
              "code": 400,
              "message": "Bad request",
              "responseModel": "error"
            }
          ],
          "summary": "List the officer appointments",
          "type": "appointmentList"
        }
      ],
      "path": "/officers/{officer_id}/appointments"
    }
  ],
  "models": {
    "appointmentList": {
      "id": "appointmentList",
      "properties": {
        "date_of_birth": {
          "description": "The officer's date of birth details.",
          "items": {
            "$ref": "dateOfBirth"
          },
          "type": "array"
        },
        "etag": {
          "description": "The ETag of the resource.",
          "type": "string"
        },
        "is_corporate_officer": {
          "description": "Indicator representing if the officer is a corporate body.",
          "type": "boolean"
        },
        "items": {
          "description": "The list of officer appointments.",
          "items": {
            "$ref": "officerAppointmentSummary"
          },
          "type": "array"
        },
        "items_per_page": {
          "description": "The number of officer appointments to return per page.",
          "type": "integer"
        },
        "kind": {
          "enum": [
            "personal-appointment"
          ],
          "type": "string"
        },
        "links": {
          "description": "Links to other resources associated with this officer appointment resource.",
          "items": {
            "$ref": "officerLinkTypes"
          },
          "type": "array"
        },
        "name": {
          "description": "The corporate or natural officer name.",
          "type": "string"
        },
        "start_index": {
          "description": "The first row of data to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the `items_per_page` parameter.",
          "type": "integer"
        },
        "total_results": {
          "description": "The total number of officer appointments in this result set.",
          "type": "integer"
        }
      },
      "required": [
        "etag",
        "is_corporate_officer",
        "items",
        "items_per_page",
        "kind",
        "links",
        "name",
        "start_index",
        "total_results"
      ]
    },
    "officerAppointmentSummary": {
      "id": "officerAppointmentSummary",
      "properties": {
        "address": {
          "description": "The correspondence address of the officer.",
          "items": {
            "$ref": "address"
          },
          "type": "array"
        },
        "appointed_before": {
          "description": "The date the officer was appointed before. Only present when the `is_pre_1992_appointment` attribute is `true`.",
          "type": "string",
          "format": "date"
        },
        "appointed_on": {
          "description": "The date the officer was appointed.",
          "type": "string",
          "format": "date"
        },
        "appointed_to": {
          "description": "The company information of the appointment.",
          "items": {
            "$ref": "appointedTo"
          },
          "type": "array"
        },
        "name": {
          "description": "The full name of the officer.",
          "type": "string"
        },
        "country_of_residence": {
          "description": "The officer's country of residence.",
          "type": "string"
        },
        "former_names": {
          "description": "Former names for the officer, if there are any.",
          "items": {
            "$ref": "formerNames"
          },
          "type": "array"
        },
        "identification": {
          "description": "Only one from `eea` or `non-eea` can be supplied, not both.",
          "items": {
            "$ref": "corporateIdent"
          },
          "type": "array"
        },
        "is_pre_1992_appointment": {
          "description": "Indicator representing if the officer was appointed before their appointment date.",
          "type": "boolean"
        },
        "links": {
          "description": "Links to other resources associated with this officer appointment item.",
          "items": {
            "$ref": "appointmentLinkTypes"
          },
          "type": "array"
        },
        "name_elements": {
          "description": "A document encapsulating the separate elements of a natural officer's name.",
          "notes": "Mandatory for a natural officer appointment.",
          "items": {
            "$ref": "nameElements"
          },
          "type": "array"
        },
        "nationality": {
          "description": "The officer's nationality.",
          "type": "string"
        },
        "occupation": {
          "description": "The officer's occupation.",
          "type": "string"
        },
        "officer_role": {
          "enum": [
            "cic-manager",
            "corporate-director",
            "corporate-llp-designated-member",
            "corporate-llp-member",
            "corporate-member-of-a-management",
            "corporate-member-of-a-supervisory-organ",
            "corporate-member-of-an-administrative-organ",
            "corporate-nominee-director",
            "corporate-nominee-secretary",
            "corporate-secretary",
            "director",
            "judicial-factor",
            "llp-designated-member",
            "llp-member",
            "member-of-a-management",
            "member-of-a-supervisory-organ",
            "member-of-an-administrative-organ",
            "nominee-director",
            "nominee-secretary",
            "receiver-and-manager",
            "secretary"
          ],
          "type": "string"
        },
        "resigned_on": {
          "description": "The date the officer was resigned.",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "address",
        "appointed_to",
        "links",
        "name",
        "officer_role"
      ]
    },
    "address": {
      "id": "address",
      "properties": {
        "address_line_1": {
          "description": "The first line of the address.",
          "type": "string"
        },
        "address_line_2": {
          "description": "The second line of the address.",
          "type": "string"
        },
        "care_of": {
          "description": "The care of name.",
          "type": "string"
        },
        "country": {
          "description": "The country. For example, UK.",
          "type": "string"
        },
        "locality": {
          "description": "The locality. For example London.",
          "type": "string"
        },
        "po_box": {
          "description": "The post-office box number.",
          "type": "string"
        },
        "postal_code": {
          "description": "The postal code. For example CF14 3UZ.",
          "type": "string"
        },
        "premises": {
          "description": "The property name or number.",
          "type": "string"
        },
        "region": {
          "description": "The region. For example Surrey.",
          "type": "string"
        }
      }
    },
    "appointedTo": {
      "id": "appointedTo",
      "properties": {
        "company_name": {
          "description": "The name of the company the officer is acting for.",
          "type": "string"
        },
        "company_number": {
          "description": "The number of the company the officer is acting for.",
          "type": "string"
        },
        "company_status": {
          "description": "The status of the company the officer is acting for.",
          "type": "string"
        }
      },
      "required": [
        "company_number"
      ]
    },
    "dateOfBirth": {
      "id": "dateOfBirth",
      "properties": {
        "month": {
          "description": "The month the officer was born in.",
          "type": "integer"
        },
        "year": {
          "description": "The year the officer was born in.",
          "type": "integer"
        }
      },
      "required": [
        "month",
        "year"
      ]
    },
    "formerNames": {
      "id": "formerNames",
      "properties": {
        "forenames": {
          "description": "Former forenames of the officer.",
          "type": "string"
        },
        "surname": {
          "description": "Former surnames of the officer.",
          "type": "string"
        }
      }
    },
    "officerLinkTypes": {
      "id": "officerLinkTypes",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "description": "Link to this officer appointment resource.",
          "type": "string"
        }
      }
    },
    "appointmentLinkTypes": {
      "id": "appointmentLinkTypes",
      "required": [
        "company"
      ],
      "properties": {
        "company": {
          "description": "Link to the company profile resource that this appointment is associated with.",
          "type": "string"
        }
      }
    },
    "corporateIdent": {
      "id": "corporateIdent",
      "properties": {
        "identification_type": {
          "descrption": "The officer's identity type",
          "enum": [
            "eea",
            "non-eea"
          ],
          "type": "string"
        },
        "legal_authority": {
          "description": "The legal authority supervising the company.",
          "type": "string"
        },
        "legal_form": {
          "description": "The legal form of the company as defined by its country of registration.",
          "type": "string"
        },
        "place_registered": {
          "description": "Place registered.",
          "type": "string"
        },
        "registration_number": {
          "description": "Company registration number.",
          "type": "string"
        }
      }
    },
    "nameElements": {
      "id": "nameElements",
      "properties": {
        "forename": {
          "description": "The forename of the officer.",
          "type": "string"
        },
        "title": {
          "description": "Title of the officer.",
          "type": "string"
        },
        "other_forenames": {
          "description": "Other forenames of the officer.",
          "type": "string"
        },
        "surname": {
          "description": "The surname of the officer.",
          "type": "string"
        },
        "honours": {
          "description": "Honours an officer might have.",
          "type": "string"
        }
      },
      "required": [
        "surname"
      ]
    },
    "error": {
      "id": "error",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "errorDetail"
          },
          "description": "A list of errors found"
        }
      }
    },
    "errorDetail": {
      "id": "errorDetail",
      "required": [
        "type",
        "error"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of error.",
          "enum": [
            "ch:service",
            "ch:validation"
          ]
        },
        "location_type": {
          "type": "string",
          "description": "Describes the type of location returned so that it may be parsed appropriately.",
          "enum": [
            "json-path",
            "query-parameter"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location in the submitted request in which the error relates. This parameter is only provided when errors[].type is set to \"ch:validation\"."
        },
        "error": {
          "type": "string",
          "description": "The error being returned. See github for valid [https://github.com/companieshouse/api-enumerations/blob/develop/errors.yml](https://github.com/companieshouse/api-enumerations/blob/develop/errors.yml)error enumeration types."
        },
        "error_values": {
          "type": "array",
          "description": "A collection of argument name and value pairs which, when substituted into the error string, provide the full description of the error. As many name/value pairs as necessary to complete the error description are returned. See example above.",
          "items": {
            "$ref": "error_values"
          }
        }
      }
    },
    "error_values": {
      "id": "error_values",
      "properties": {
        "argument": {
          "type": "object",
          "description": "The element name and value pair required to complete the error description, will repeat as necessary."
        }
      }
    }
  },
  "apiVersion": "0.0.1",
  "info": {
    "title": "officerAppointmentList Specification",
    "description": "**This specification was generated from old data and may not reflect the actual API.**"
  }
}