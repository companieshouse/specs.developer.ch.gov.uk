{
  "openapi": "3.0.1",
  "info": {
    "title": "filings Specification",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://example.com/api_url"
    }
  ],
  "paths": {
    "/admin/filings/{barcode}": {
      "get": {
        "tags": [
          "adminfilings{barcode}"
        ],
        "summary": "Get the current filing",
        "operationId": "getFiling",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "The barcode to query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "OAuth 2 access token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/filing"
                }
              }
            }
          },
          "401": {
            "description": "Not authorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Filing not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "adminfilings{barcode}"
        ],
        "summary": "Update a filing",
        "description": "A filing would be updated to set its status to queued and unsetting the barcode, thus committing the data changes it encapsulates and queuing them on the backend.",
        "operationId": "updateFiling",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "The barcode to query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "OAuth 2 access token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "The transaction id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The status of the filing.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update successful",
            "content": {}
          },
          "401": {
            "description": "Not authorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            }
          },
          "404": {
            "description": "Filing not updated",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "status"
      }
    }
  },
  "components": {
    "schemas": {
      "filing": {
        "required": [
          "status",
          "transaction_id"
        ],
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The transactionID, to be used in subsequent transaction related requests."
          },
          "status": {
            "type": "string",
            "description": "The status of the filing.",
            "enum": [
              "in-progress",
              "queued",
              "processing"
            ]
          },
          "barcode": {
            "type": "string",
            "description": "The barcode assigned to the filing."
          }
        }
      },
      "serviceError": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error that occured."
          },
          "error_description": {
            "type": "string",
            "description": "A description of the error."
          },
          "exception_id": {
            "type": "string",
            "description": "A unique ID referencing the occurrence of the error."
          }
        }
      }
    }
  }
}